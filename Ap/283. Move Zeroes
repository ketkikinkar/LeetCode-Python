283. Move Zeroes
Solved
Easy
Topics
Companies
Hint
Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1
 

Follow up: Could you minimize the total number of operations done?
Seen this question in a real interview before?
1/5
Yes
No
Accepted
3.9M
Submissions
6.3M
Acceptance Rate
62.6%

class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        # non_zero = 0
        # for n in nums:
        #     if n!=0:
        #         nums[non_zero] = n
        #         non_zero += 1
        # for i in range(non_zero,len(nums)):
        #     nums[i] = 0
        # T O(n); S O(1)
        l = 0
        for r in range(len(nums)):
            if nums[r]:
                nums[l], nums[r] = nums[r], nums[l]
                l += 1
        return nums
        # T O(n); S O(1)

        
