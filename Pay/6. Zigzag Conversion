6. Zigzag Conversion

6. Zigzag Conversion
Solved
Medium
Topics
Companies
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"
 

Constraints:

1 <= s.length <= 1000
s consists of English letters (lower-case and upper-case), ',' and '.'.
1 <= numRows <= 1000
Seen this question in a real interview before?
1/5

class Solution:
    def convert(self, s: str, numRows: int) -> str:
        if numRows > len(s) or numRows==1:
            return s
        res = ["" for _ in range(numRows)]
        down = 1
        c = 0
        for char in s:
            if down == 1 and c<numRows:
                res[c]+=char
                if c + 1 == numRows:
                    down = 0
                    c -= 1
                    continue
                else:
                    c+=1
            if down == 0  and c >=0:
                res[c]+=char
                if c == 0:
                    down = 1
                    c += 1
                else:
                    c-=1
        return "".join(res)


"""
Time Complexity: O(n)

The algorithm makes a single pass through the input string of length n
Each character is processed exactly once and added to one of the rows
The joining operation at the end is also O(n)

Space Complexity: O(n)

The algorithm uses additional space to store the characters in the rows
In the worst case, all characters from the input string are stored in the result array
The final joined string also requires O(n) space
"""







