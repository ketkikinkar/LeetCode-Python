"""
33. Search in Rotated Sorted Array   https://leetcode.com/problems/search-in-rotated-sorted-array/description/
Medium
Topics
Companies
There is an integer array nums sorted in ascending order (with distinct values).

Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].

Given the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.

You must write an algorithm with O(log n) runtime complexity.
Example 1:

Input: nums = [4,5,6,7,0,1,2], target = 0
Output: 4
Example 2:

Input: nums = [4,5,6,7,0,1,2], target = 3
Output: -1
Example 3:

Input: nums = [1], target = 0
Output: -1
Constraints:

1 <= nums.length <= 5000
-104 <= nums[i] <= 104
All values of nums are unique.
nums is an ascending array that is possibly rotated.
-104 <= target <= 104

Seen this question in a real interview before?
1/5
Yes
No
Accepted
3.4M
Submissions
8M
Acceptance Rate
42.3%
Topics
Array
Binary Search
"""

# SOLTUION

Time Complexity: O(log n)

This algorithm uses a modified binary search approach to find a target value in a rotated sorted array.
In each iteration, the algorithm identifies which half of the array is sorted and uses that information to determine where the target could be.
Since the search space is halved in each iteration, the maximum number of iterations is logarithmic with respect to the input size.
All operations inside the loop (comparisons, pointer updates) take constant time.
Therefore, the time complexity is O(log n), where n is the length of the input array nums.

Space Complexity: O(1)

The algorithm uses only a fixed number of variables (l, r, mid) regardless of the input size.
No additional data structures that scale with input size are created.
The space used remains constant regardless of the array's length. """
