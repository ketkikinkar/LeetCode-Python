"""
704. Binary Search https://leetcode.com/problems/binary-search/description/
Solved
Easy
Topics
Companies
Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.
Example 1:
Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4
Example 2:

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1
Explanation: 2 does not exist in nums so return -1

Constraints:
1 <= nums.length <= 104
-104 < nums[i], target < 104
All the integers in nums are unique.
nums is sorted in ascending order.

Seen this question in a real interview before?
1/5
Yes
No
Accepted
3M
Submissions
5.1M
Acceptance Rate
59.2%
Topics
Array
Binary Search
"""

# SOLUTION:

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        l, r = 0, len(nums) - 1
        while l <= r:
            mid = (l + r) // 2
            if nums[mid] < target:
                l = mid + 1
            elif nums[mid] > target:
                r = mid - 1
            else:
                return mid
        return -1
        """
        Time Complexity: O(log n)

This is a classic binary search implementation that divides the search space in half with each iteration.
In the worst case, the algorithm repeatedly narrows the search range by half until either finding the target or determining it doesn't exist.
Since the search space is halved in each iteration, the maximum number of iterations is logarithmic with respect to the input size.
Therefore, the time complexity is O(log n), where n is the length of the input array nums.

Space Complexity: O(1)

The algorithm uses only a fixed number of variables (l, r, mid) regardless of the input size.
No additional data structures that scale with input size are created.
The space used remains constant regardless of the array's length.

This is an efficient implementation of binary search with logarithmic time complexity and constant space complexity. Binary search requires that the input array is already sorted to work correctly."""
