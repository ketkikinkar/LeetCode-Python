767. Reorganize String
Medium
Topics
conpanies icon
Companies
Hint
Given a string s, rearrange the characters of s so that any two adjacent characters are not the same.

Return any possible rearrangement of s or return "" if not possible.

 

Example 1:

Input: s = "aab"
Output: "aba"
Example 2:

Input: s = "aaab"
Output: ""
 

Constraints:

1 <= s.length <= 500
s consists of lowercase English letters.
Seen this question in a real interview before?
1/5
Yes
No
Accepted
511,798/911.9K
Acceptance Rate
56.1%

# SOLTUION:


class Solution:
    def reorganizeString(self, s: str) -> str:
        count = Counter(s) # hashmap, count each char
        maxHeap = [[-cnt,char] for char, cnt in count.items()]
        heapq.heapify(maxHeap) #O(n)
        prev = None
        res = ""
        while maxHeap or prev:
            if prev and not maxHeap:
                return ""
            cnt, char = heapq.heappop(maxHeap)
            res+=char
            cnt+=1

            if prev:
                heapq.heappush(maxHeap,prev)
                prev = None
            if cnt!=0:
                prev = [cnt,char]
        
        return res
