"""
2405. Optimal Partition of String
Solved
Medium
Topics
Companies
Hint
Given a string s, partition the string into one or more substrings such that the characters in each substring are unique. That is, no letter appears in a single substring more than once.

Return the minimum number of substrings in such a partition.

Note that each character should belong to exactly one substring in a partition.

 

Example 1:

Input: s = "abacaba"
Output: 4
Explanation:
Two possible partitions are ("a","ba","cab","a") and ("ab","a","ca","ba").
It can be shown that 4 is the minimum number of substrings needed.
Example 2:

Input: s = "ssssss"
Output: 6
Explanation:
The only valid partition is ("s","s","s","s","s","s").
 

Constraints:

1 <= s.length <= 105
s consists of only English lowercase letters.
Seen this question in a real interview before?
1/5
Yes
No
Accepted
184.5K
Submissions
236.3K
Acceptance Rate
78.1%
Topics
Companies
Hint 1
Try to come up with a greedy approach.
Hint 2
From left to right, extend every substring in the partition as much as possible.
Similar Questions
Discussion (72)"""

# SOLTUION:

class Solution:
    def partitionString(self, s: str) -> int:
        cset = set()
        res = 1
        for c in s:
            if c in cset:
                res += 1
                cset = set()
            cset.add(c)
        return res

        
