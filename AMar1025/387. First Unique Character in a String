"""
387. First Unique Character in a String

Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"

Output: 0

Explanation:

The character 'l' at index 0 is the first character that does not occur at any other index.

Example 2:

Input: s = "loveleetcode"

Output: 2

Example 3:

Input: s = "aabb"

Output: -1

 

Constraints:

1 <= s.length <= 105
s consists of only lowercase English letters.
"""

# SOLUTION:

class Solution:
    def firstUniqChar(self, s: str) -> int:
        count = collections.Counter(s)
        for i,char in enumerate(s):
            if count[char]==1:
                return i
        return -1
    """
    Time complexity: O(N) since we go through the string of length N two times.
Space complexity: O(1) because English alphabet contains 26 letters.
    """
