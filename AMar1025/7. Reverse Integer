"""
7. Reverse Integer
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1
"""

# SOLTUION:

class Solution:
    def reverse(self, x: int) -> int:
        sign = [1,-1][x<0]
        res, x = 0, abs(x)
        while x:
            x, mod = divmod(x,10)
            res = res*10 + mod
            if res > pow(2,31)-1 or res < -pow(2,31):
                return 0
        return sign*res
            
"""
Time Complexity: O(log(x)). There are roughly log10(x) digits in x.
Space Complexity: O(1).
"""
